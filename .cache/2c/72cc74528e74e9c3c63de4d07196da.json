{"id":"LDUH","dependencies":[{"name":"C:/Projects/forkisto/src/styles/components/navigation.scss","includedInParent":true,"mtime":1595622293880},{"name":"C:/Projects/forkisto/src/styles/components/searchbar.scss","includedInParent":true,"mtime":1595706775745},{"name":"C:/Projects/forkisto/src/styles/mixins.scss","includedInParent":true,"mtime":1595621978851},{"name":"C:\\Projects\\forkisto\\package.json","includedInParent":true,"mtime":1595716316567}],"generated":{"css":".navbar{-webkit-box-shadow:1px 2px 16px rgba(0,0,0,.2);-moz-box-shadow:1px 2px 16px rgba(0,0,0,.2);box-shadow:1px 2px 16px rgba(0,0,0,.2)}.navbar .navbar-item img{max-height:3.6rem}.search-bar{margin-top:1.5rem}","js":""},"sourceMaps":{"css":{"mappings":[{"source":"styles\\components\\navigation.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"styles\\mixins.scss","name":null,"original":{"line":18,"column":4},"generated":{"line":1,"column":8}},{"source":"styles\\mixins.scss","name":null,"original":{"line":18,"column":48},"generated":{"line":1,"column":54}},{"source":"styles\\mixins.scss","name":null,"original":{"line":19,"column":4},"generated":{"line":1,"column":55}},{"source":"styles\\mixins.scss","name":null,"original":{"line":19,"column":45},"generated":{"line":1,"column":98}},{"source":"styles\\mixins.scss","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":99}},{"source":"styles\\mixins.scss","name":null,"original":{"line":20,"column":40},"generated":{"line":1,"column":137}},{"source":"styles\\components\\navigation.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":138}},{"source":"styles\\components\\navigation.scss","name":null,"original":{"line":7,"column":12},"generated":{"line":1,"column":163}},{"source":"styles\\components\\navigation.scss","name":null,"original":{"line":7,"column":31},"generated":{"line":1,"column":180}},{"source":"styles\\components\\searchbar.scss","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":181}},{"source":"styles\\components\\searchbar.scss","name":null,"original":{"line":2,"column":4},"generated":{"line":1,"column":193}},{"source":"styles\\components\\searchbar.scss","name":null,"original":{"line":2,"column":22},"generated":{"line":1,"column":210}}],"sources":{"styles\\components\\navigation.scss":".navbar {\r\n    @include box-shadow(1px, 2px, 16px, rgba(0, 0, 0, 0.2));\r\n\r\n    .navbar-item {\r\n\r\n        img {\r\n            max-height: 3.60rem;\r\n        }\r\n    }\r\n}\r\n","styles\\mixins.scss":"// Define default font size\r\n/*  Usage\r\n    p {\r\n      @include font-size(14px)\r\n    }\r\n*/\r\n@function calculateRem($size) {\r\n    $remSize: $size / 16px;\r\n    @return $remSize * 1rem;\r\n}\r\n\r\n@mixin font-size($size) {\r\n    font-size: $size;\r\n    font-size: calculateRem($size);\r\n}\r\n\r\n@mixin box-shadow($top, $left, $blur, $color, $inset:\"\") {\r\n    -webkit-box-shadow: $top $left $blur $color #{$inset};\r\n    -moz-box-shadow: $top $left $blur $color #{$inset};\r\n    box-shadow: $top $left $blur $color #{$inset};\r\n}\r\n\r\n// Include external font\r\n// Usage: @include font-face('gotham', '/fonts/gotham');\r\n@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {\r\n    @font-face {\r\n        font-family: quote($font-name);\r\n        src: url($file-name + '.eot');\r\n        src: url($file-name + '.eot?#iefix') format('embedded-opentype'),\r\n        url($file-name + '.woff') format('woff'),\r\n        url($file-name + '.ttf') format('truetype'),\r\n        url($file-name + '.svg##{$font-name}') format('svg');\r\n        font-weight: $weight;\r\n        font-style: $style;\r\n    }\r\n}\r\n\r\n//Padding mixin\r\n@mixin padding($top, $right, $bottom, $left) {\r\n    padding-top: $top;\r\n    padding-right: $right;\r\n    padding-bottom: $bottom;\r\n    padding-left: $left;\r\n}\r\n\r\n//Margin mixin\r\n@mixin margin($top, $right, $bottom, $left) {\r\n    margin-top: $top;\r\n    margin-right: $right;\r\n    margin-bottom: $bottom;\r\n    margin-left: $left;\r\n}\r\n\r\n// Define vertical, horizontal, or both position\r\n/*  Usage\r\n    .foo {\r\n      @include center(both);\r\n    }\r\n    .foo-parent {\r\n      position: relative;\r\n    }\r\n*/\r\n@mixin center($position) {\r\n    position: absolute;\r\n\r\n    @if $position == 'vertical' {\r\n        top: 50%;\r\n        -webkit-transform: translateY(-50%);\r\n        -ms-transform: translateY(-50%);\r\n        transform: translateY(-50%);\r\n    } @else if $position == 'horizontal' {\r\n        left: 50%;\r\n        -webkit-transform: translateX(-50%);\r\n        -ms-transform: translateX(-50%);\r\n        transform: translate(-50%);\r\n    } @else if $position == 'both' {\r\n        top: 50%;\r\n        left: 50%;\r\n        -webkit-transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n        transform: translate(-50%, -50%);\r\n    }\r\n}\r\n\r\n// Apply gradient to element\r\n/*  Usage: $start-color, $end-color, $orientation - vertical/horizontal/radial\r\n    .foo {\r\n        @include background-gradient(red, black, 'vertical');\r\n    }\r\n*/\r\n@mixin background-gradient($start-color, $end-color, $orientation) {\r\n    background: $start-color;\r\n\r\n    @if $orientation == 'vertical' {\r\n        background: -webkit-linear-gradient(top, $start-color, $end-color);\r\n        background: linear-gradient(to bottom, $start-color, $end-color);\r\n    } @else if $orientation == 'horizontal' {\r\n        background: -webkit-linear-gradient(left, $start-color, $end-color);\r\n        background: linear-gradient(to right, $start-color, $end-color);\r\n    } @else {\r\n        background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);\r\n        background: radial-gradient(ellipse at center, $start-color, $end-color);\r\n    }\r\n}\r\n\r\n// Media queries\r\n$mobile: 650;\r\n$tablet: 768;\r\n$desktop: 1280;\r\n\r\n@mixin mobile {\r\n    @media only screen and (max-width: $mobile * 1px) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin tablet {\r\n    @media only screen and (min-width: $tablet * 1px) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin desktop {\r\n    @media only screen and (min-width: $desktop * 1px) {\r\n        @content;\r\n    }\r\n}\r\n","styles\\components\\searchbar.scss":".search-bar {\r\n    margin-top: 1.5rem;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"57ecb8b5a394dd260431857c913edaa2","cacheData":{"env":{}}}